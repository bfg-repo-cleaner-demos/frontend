
$ratio        : 5/3;

$fontsize     : 16;
$base         : 24;

$baseTopPad   : 5px;
$baseBotPad   : 7px;
$baseLeftPad  : 9px;
$baseRightPad : 10px;

$gridCols     : 12;
$gridColMin   : 3; // Min mumber of grid setps for a column

$baseHeight   : $base/$fontsize + 0em;

$gridHeight   : $baseHeight * 2;
$gridWidth    : $gridHeight * $ratio;

.grid-box,
%grid-box {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    margin: 0;
    padding: $baseTopPad ($baseLeftPad + $baseRightPad) $baseBotPad 0;
}
.grid-box-1 {
    @extend %grid-box;
    width:  $gridWidth;
    height: $gridHeight;
}
.grid-box-1-5 {
    @extend %grid-box;
    width:  $gridWidth * 1.5;
    height: $gridHeight * 1.5;
}
.grid-box-2 {
    @extend %grid-box;
    width:  $gridWidth * 2;
    height: $gridHeight * 2;
}
.grid-box-3 {
    @extend %grid-box;
    width:  $gridWidth * 3;
    height: $gridHeight * 3;
}
.grid-box-4 {
    @extend %grid-box;
    width:  $gridWidth * 4;
    height: $gridHeight * 4;
}

$from: $gridWidth * $gridColMin * 2;
@media only screen and (min-width : $from) {
    .grid-col {
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        padding: $baseTopPad $baseRightPad $baseBotPad $baseLeftPad;
        float: left;
    }
    .grid-col-border {
        padding: $baseTopPad ($baseRightPad - 1) $baseBotPad $baseLeftPad;
        border-right: 1px solid red;
    }
}

@for $i from ($gridColMin * 2) through $gridCols {
    $from : $gridWidth * $i;
    $to : $gridWidth * ($i+1);
    // last media-query needs upper bound of 'infinity':
    @if $i == $gridCols {
        $to : $gridWidth * 999;
    }
    @media only screen and (min-width : $from) and (max-width: $to) {
        #container {
            width:  $from;
        }
        $cols : floor($i/$gridColMin);
        @for $c from 1 through ($cols - 1) {
            $width : $gridColMin * $gridWidth * $c;
            .grid-col-#{$c}-#{$cols} {
                width: $width;
            }
            @if ($i % $gridColMin > 0) {
                .grid-col-greedy.grid-col-#{$c}-#{$cols} {
                    width: $width + ($i % $gridColMin) * $gridWidth;
                }
            }
        }
    }
}


@for $i from 1 through 10 {
    .grid-h-unit-#{$i} {
        /*@extend %grid-box;*/
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        height: (36px * $i) + (12px * ($i - 1));
    }
}

.grid-article {
    max-width: $gridWidth * 7;
}

.grid-article .main-image {
    float: right;
}

@for $i from 7 through 12 {
    $from : $gridWidth * $i;
    $step : $i - 7;
    $incrWidth  : floor($step / 2);
    $incrMargin : ceil($step / 2);

    // last media-query needs upper bound of 'infinity':
    @media only screen and (min-width : $from) {
        .grid-article .main-image {
            width: $gridWidth * (4 + $incrWidth);
            margin-right: -1 * $gridWidth * (0 + $incrMargin)
        }
    }
}
